<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Online Depanneur - Oddities for Sale</title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
<header>
    <h1>Welcome to Online Depanneur</h1>
    <p>Find oddities, quirks, and unique treasures here!</p>

    <!-- Display current balance -->
    <div class="balance">
        <span>Balance: ${{ balance }}</span>
    </div>

    <button id="view-cart-btn">View Cart ({{ cart.length }})</button>
</header>

<div class="container">
    {% for product in products %}
        <div id="product-{{ product.id }}" class="product-card">
            <img src="{{ product.image }}" alt="{{ product.name }}">
            <h3>{{ product.name }}</h3>
            <p class="description">{{ product.description }}</p>
            <p class="price">${{ product.price }}</p>
            <button class="add-to-cart-btn" onclick="addToCart({{ product.id }})">Add to üõí</button>
        </div>
    {% endfor %}
</div>

<div id="cart-modal" style="display:none;">
    <h2>Your Cart üõí</h2>
    <ul id="cart-items">
        {% for item in cart %}
            <li class="cart-item">
                <img src="{{ item.image }}" alt="{{ item.name }}" class="cart-item-image">
                <span class="cart-item-name">{{ item.name }}</span> - ${{ item.price }}
                <button class="remove-btn" onclick="removeFromCart({{ item.id }})">üóëÔ∏è</button>
            </li>
        {% else %}
            <li>Your cart is empty.</li>
        {% endfor %}
    </ul>
    <button id="close-cart-btn" class="cart-button">Close</button>
</div>

<script>
    // Function to add product to the cart
    function addToCart(productId) {
        fetch(`/api/add-to-cart/${productId}`, {
            method: 'POST',
            headers: {'Content-Type': 'application/json',}
        })
            .then(response => response.json())
            .then((data) => {
                console.log(data.message);
                location.reload();
            })
            .catch(err => console.error('Error adding product:', err));
    }

    // Function to remove product from the cart
    function removeFromCart(productId) {
        fetch(`/api/remove-from-cart/${productId}`, {
            method: 'POST',
            headers: {'Content-Type': 'application/json',}
        })
            .then(response => response.json())
            .then((data) => {
                console.log(data.message);
                location.reload();
            })
            .catch(err => console.error('Error removing product:', err));
    }

    // Function to view the cart
    function viewCart() {
        const cartModal = document.getElementById('cart-modal');
        cartModal.style.display = 'block';
    }

    // Function to close the cart modal
    function closeCart() {
        document.getElementById('cart-modal').style.display = 'none';
    }

    // Event listeners
    document.getElementById('view-cart-btn').addEventListener('click', viewCart);
    document.getElementById('close-cart-btn').addEventListener('click', closeCart);
</script>
</body>
</html>
